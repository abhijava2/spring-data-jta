<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:transaction="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
  <beans profile="atomikos,default">
    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="atomikosCatalogEntityManagerFactory">
      <property name="jpaProperties">
        <props>
          <prop key="hibernate.format_sql">${database.sql.format}</prop>
          <prop key="hibernate.globally_quoted_identifiers">${database.sql.quotes}</prop>
          <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
          <prop key="hibernate.id.new_generator_mappings">${database.sql.sequence}</prop>
          <prop key="hibernate.transaction.jta.platform">com.atomikos.icatch.jta.hibernate4.AtomikosPlatform</prop>
          <prop key="hibernate.use_sql_comments">${database.sql.comment}</prop>
        </props>
      </property>
      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
          <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect"/>
          <property name="generateDdl" value="${database.generate}"/>
          <property name="showSql" value="${database.sql.show}"/>
        </bean>
      </property>
      <property name="jtaDataSource">
        <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
          <property name="borrowConnectionTimeout" value="3000"/>
          <property name="defaultIsolationLevel" value="4"/>
          <property name="poolSize" value="3"/>
          <property name="uniqueResourceName" value="catalogDS"/>
          <property name="xaDataSource">
            <bean class="${database.driver}" lazy-init="true">
              <property name="password" value=""/>
              <property name="url" value="${database.url.catalog}"/>
              <property name="user" value="${database.user}"/>
            </bean>
          </property>
        </bean>
      </property>
      <property name="packagesToScan" value="org.example.domain.catalog"/>
    </bean>

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="atomikosDirectoryEntityManagerFactory">
      <property name="jpaProperties">
        <props>
          <prop key="hibernate.format_sql">${database.sql.format}</prop>
          <prop key="hibernate.globally_quoted_identifiers">${database.sql.quotes}</prop>
          <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
          <prop key="hibernate.id.new_generator_mappings">${database.sql.sequence}</prop>
          <prop key="hibernate.transaction.jta.platform">com.atomikos.icatch.jta.hibernate4.AtomikosPlatform</prop>
          <prop key="hibernate.use_sql_comments">${database.sql.comment}</prop>
        </props>
      </property>
      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
          <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect"/>
          <property name="generateDdl" value="${database.generate}"/>
          <property name="showSql" value="${database.sql.show}"/>
        </bean>
      </property>
      <property name="jtaDataSource">
        <bean class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
          <property name="borrowConnectionTimeout" value="3000"/>
          <property name="defaultIsolationLevel" value="4"/>
          <property name="poolSize" value="3"/>
          <property name="uniqueResourceName" value="directoryDS"/>
          <property name="xaDataSource">
            <bean class="${database.driver}" lazy-init="true">
              <property name="password" value=""/>
              <property name="url" value="${database.url.directory}"/>
              <property name="user" value="${database.user}"/>
            </bean>
          </property>
        </bean>
      </property>
      <property name="packagesToScan" value="org.example.domain.directory"/>
    </bean>

    <bean class="org.springframework.transaction.jta.JtaTransactionManager" id="transactionManager">
      <property name="transactionManager">
        <bean class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
          <property name="forceShutdown" value="false"/>
        </bean>
      </property>
      <property name="userTransaction">
        <bean class="com.atomikos.icatch.jta.J2eeUserTransaction">
          <property name="transactionTimeout" value="300"/>
        </bean>
      </property>
      <property name="allowCustomIsolationLevels" value="true"/>
    </bean>

    <context:annotation-config/>

    <jpa:repositories base-package="org.example.data.catalog" entity-manager-factory-ref="atomikosCatalogEntityManagerFactory"/>
    <jpa:repositories base-package="org.example.data.directory" entity-manager-factory-ref="atomikosDirectoryEntityManagerFactory"/>

    <transaction:annotation-driven/>
  </beans>

  <beans profile="bitronix">
    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="bitronixCatalogEntityManagerFactory">
      <property name="jpaProperties">
        <props>
          <prop key="hibernate.format_sql">${database.sql.format}</prop>
          <prop key="hibernate.globally_quoted_identifiers">${database.sql.quotes}</prop>
          <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
          <prop key="hibernate.id.new_generator_mappings">${database.sql.sequence}</prop>
          <prop key="hibernate.transaction.jta.platform">org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform</prop>
          <prop key="hibernate.use_sql_comments">${database.sql.comment}</prop>
        </props>
      </property>
      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
          <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect"/>
          <property name="generateDdl" value="${database.generate}"/>
          <property name="showSql" value="${database.sql.show}"/>
        </bean>
      </property>
      <property name="jtaDataSource">
        <bean class="bitronix.tm.resource.jdbc.PoolingDataSource" destroy-method="close" init-method="init">
          <property name="allowLocalTransactions" value="true"/>
          <property name="className" value="${database.driver}"/>
          <property name="driverProperties">
            <props>
              <prop key="password"></prop>
              <prop key="url">${database.url.catalog}</prop>
              <prop key="user">${database.user}</prop>
            </props>
          </property>
          <property name="maxPoolSize" value="5"/>
          <property name="minPoolSize" value="1"/>
          <property name="uniqueName" value="catalogDS"/>
        </bean>
      </property>
      <property name="packagesToScan" value="org.example.domain.catalog"/>
    </bean>

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="bitronixDirectoryEntityManagerFactory">
      <property name="jpaProperties">
        <props>
          <prop key="hibernate.format_sql">${database.sql.format}</prop>
          <prop key="hibernate.globally_quoted_identifiers">${database.sql.quotes}</prop>
          <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
          <prop key="hibernate.id.new_generator_mappings">${database.sql.sequence}</prop>
          <prop key="hibernate.transaction.jta.platform">org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform</prop>
          <prop key="hibernate.use_sql_comments">${database.sql.comment}</prop>
        </props>
      </property>
      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
          <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect"/>
          <property name="generateDdl" value="${database.generate}"/>
          <property name="showSql" value="${database.sql.show}"/>
        </bean>
      </property>
      <property name="jtaDataSource">
        <bean class="bitronix.tm.resource.jdbc.PoolingDataSource" destroy-method="close" init-method="init">
          <property name="allowLocalTransactions" value="true"/>
          <property name="className" value="${database.driver}"/>
          <property name="driverProperties">
            <props>
              <prop key="password"></prop>
              <prop key="url">${database.url.directory}</prop>
              <prop key="user">${database.user}</prop>
            </props>
          </property>
          <property name="maxPoolSize" value="5"/>
          <property name="minPoolSize" value="1"/>
          <property name="uniqueName" value="directoryDS"/>
        </bean>
      </property>
      <property name="packagesToScan" value="org.example.domain.directory"/>
    </bean>

    <bean class="bitronix.tm.TransactionManagerServices" factory-method="getConfiguration" id="bitronixConfiguration"/>

    <bean class="bitronix.tm.TransactionManagerServices"
          depends-on="bitronixConfiguration"
          destroy-method="shutdown"
          factory-method="getTransactionManager"
          id="bitronixTransactionManager"/>

    <bean class="org.springframework.transaction.jta.JtaTransactionManager" id="transactionManager">
      <property name="transactionManager" ref="bitronixTransactionManager"/>
      <property name="userTransaction" ref="bitronixTransactionManager"/>
    </bean>

    <context:annotation-config/>

    <jpa:repositories base-package="org.example.data.catalog" entity-manager-factory-ref="bitronixCatalogEntityManagerFactory"/>
    <jpa:repositories base-package="org.example.data.directory" entity-manager-factory-ref="bitronixDirectoryEntityManagerFactory"/>

    <transaction:annotation-driven/>
  </beans>

  <beans profile="jbossts">
    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="jbosstsCatalogEntityManagerFactory">
      <property name="jpaProperties">
        <props>
          <prop key="hibernate.format_sql">${database.sql.format}</prop>
          <prop key="hibernate.globally_quoted_identifiers">${database.sql.quotes}</prop>
          <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
          <prop key="hibernate.id.new_generator_mappings">${database.sql.sequence}</prop>
          <prop key="hibernate.transaction.jta.platform">org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform</prop>
          <prop key="hibernate.use_sql_comments">${database.sql.comment}</prop>
        </props>
      </property>
      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
          <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect"/>
          <property name="generateDdl" value="${database.generate}"/>
          <property name="showSql" value="${database.sql.show}"/>
        </bean>
      </property>
      <property name="jtaDataSource">
        <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
          <property name="driverClassName" value="${database.driver}"/>
          <property name="password" value=""/>
          <property name="url" value="${database.url.catalog}"/>
          <property name="username" value="${database.user}"/>
        </bean>
      </property>
      <property name="packagesToScan" value="org.example.domain.catalog"/>
    </bean>

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="jbosstsDirectoryEntityManagerFactory">
      <property name="jpaProperties">
        <props>
          <prop key="hibernate.format_sql">${database.sql.format}</prop>
          <prop key="hibernate.globally_quoted_identifiers">${database.sql.quotes}</prop>
          <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
          <prop key="hibernate.id.new_generator_mappings">${database.sql.sequence}</prop>
          <prop key="hibernate.transaction.jta.platform">org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform</prop>
          <prop key="hibernate.use_sql_comments">${database.sql.comment}</prop>
        </props>
      </property>
      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
          <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect"/>
          <property name="generateDdl" value="${database.generate}"/>
          <property name="showSql" value="${database.sql.show}"/>
        </bean>
      </property>
      <property name="jtaDataSource">
        <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
          <property name="driverClassName" value="${database.driver}"/>
          <property name="password" value=""/>
          <property name="url" value="${database.url.directory}"/>
          <property name="username" value="${database.user}"/>
        </bean>
      </property>
      <property name="packagesToScan" value="org.example.domain.directory"/>
    </bean>

    <bean class="org.springframework.transaction.jta.JtaTransactionManager" id="transactionManager">
      <property name="transactionManager">
        <bean class="com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionManagerImple"/>
      </property>
      <property name="userTransaction">
        <bean class="com.arjuna.ats.jta.UserTransaction" factory-method="userTransaction"/>
      </property>
    </bean>

    <context:annotation-config/>

    <jpa:repositories base-package="org.example.data.catalog" entity-manager-factory-ref="jbosstsCatalogEntityManagerFactory"/>
    <jpa:repositories base-package="org.example.data.directory" entity-manager-factory-ref="jbosstsDirectoryEntityManagerFactory"/>

    <transaction:annotation-driven/>
  </beans>
</beans>
